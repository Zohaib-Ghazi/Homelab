---
- import_tasks: packages.yml
- import_tasks: iam.yml

- name: Copy vault-config to ./vault v
  ansible.builtin.copy:
    src: vault-config.hcl
    dest: /opt/vault/vault-config.hcl
    owner: vault
    group: vault
    mode: 0770
  become: yes
  #when: not vault_config_copied.stat.exists
  #register: vault_config_copied
  #Run everytime to update the config file

- name: Download Hashicorp Vault GPG key
  ansible.builtin.shell:
    cmd: |
      gpg --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys AA16FCBCA621E701
      gpg --export AA16FCBCA621E701 | sudo tee /usr/share/keyrings/hashicorp-archive-keyring.gpg
      echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
  register: gpg_key_downloaded
  
- name: Update apt cache
  ansible.builtin.apt:
    update_cache: true
  become: yes

- name: Install Vault
  ansible.builtin.apt:
    name: vault
    # version: #TODO add explicit version 
    state: present
  become: yes
  register: vault_installed
  
- name: Verify Vault installation
  ansible.builtin.shell:
    cmd: vault --version
  register: vault_version

- name: Display Vault version
  ansible.builtin.debug:
    var: vault_version.stdout

- name: Generate a self-signed TLS certificate and key
  ansible.builtin.shell:
    cmd: |
      openssl req -x509 -newkey rsa:4096 -sha256 -days 365 \
      -nodes -keyout /opt/vault/tls/vault-key.pem -out /opt/vault/tls/vault-cert.pem \
      -subj "/O=HashiCorp/CN=Vault" \
      -addext "subjectAltName = DNS:TF-VM-vault-1.local,IP:10.0.0.101"
  become: yes
  register: tls_cert_generated

- name: Display the output of the TLS certificate generation
  ansible.builtin.debug:
    var: tls_cert_generated.stdout

- name: Change ownership of the CA & certificate files to be owned by root and world-readable
  ansible.builtin.file:
    path: /opt/vault/tls/vault-cert.pem
    owner: root
    group: root
    mode: 0644
  become: yes
  register: cert_ownership_changed  

- name: Display the output of the certificate ownership change
  ansible.builtin.debug:
    var: cert_ownership_changed

- name: Change ownership of the private key to allow the Vault service to read the file, and only be readable by the Vault service
  ansible.builtin.file:
    path: /opt/vault/tls/vault-key.pem
    owner: root
    group: vault
    mode: 0640
  become: yes
  register: key_ownership_changed

- name: Display the output of the private key ownership change
  ansible.builtin.debug:
    var: key_ownership_changed

#- name: Run Vault in the background
#  ansible.builtin.command:
#    cmd: vault server -config=/opt/vault/vault-config.hcl &
#  async: 0
#  poll: 0
#  ignore_errors: yes
#  become: yes
#  register: vault_server
  
#- name: Display Vault Server Output
#  ansible.builtin.debug:
#    var: vault_server.stdout

- name: set VAULT_ADDR & VAULT_SKIP_VERIFY flags
  ansible.builtin.shell:
    cmd: |
      export VAULT_ADDR="{{ vault_addr }}" \
      export VAULT_CACERT="/opt/vault/tls/vault-cert.pem" \
      export VAULT_SKIP_VERIFY=true

- name: Echo env variables
  ansible.builtin.shell:
    cmd: |
      echo $VAULT_ADDR \
      echo $VAULT_SKIP_VERIFY \
      echo $VAULT_CACERT
  register: vault_env_vars

#    port: 8200- name: Initialize the vault
#    delay: 10  ansible.builtin.shell:
#    timeout: 60    cmd: vault operator init -key-shares=1 -key-threshold=1
#  register: vault_server_started  become: yes
  #become_user: vault
#- name: Display Vault Server Output  register: vault_init
#  ansible.builtin.debug:  
#    var: vault_server.stdout- name: Display the unseal key and root token
#  ansible.builtin.debug:
#    var: vault_init.stdout 

#- name: Unseal vault by providing unseal key
#  ansible.builtin.shell:
#    cmd: vault operator unseal {{ vault_init.stdout_lines[2] }}
#  become: yes
#  #become_user: vault
#  register: vault_unsealed
  
#- name: Display the debug message for vault_unsealed
#  ansible.builtin.debug:
#    msg: "{{ vault_unsealed.stdout }}"

#- name: Login to the vault
#  ansible.builtin.shell:
#    cmd: vault login {{ vault_init.stdout_lines[4] }}
#  become: yes
#  #become_user: vault  
#  register: vault_logged_in
  
#- name: Vault Login Debug
#  ansible.builtin.debug:
#    msg: "{{ vault_logged_in.stdout }}"